<Window x:Class="NESTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:NESTool.ViewModels"
		xmlns:cv="clr-namespace:NESTool.Utils.Converters"
		xmlns:enum="clr-namespace:NESTool.Enums"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:fx="clr-namespace:ArchitectureLibrary.FXs;assembly=ArchitectureLibrary"
        xmlns:behaviors="clr-namespace:NESTool.Utils.Behaviors"
        mc:Ignorable="d"
        Height="617.748" Width="939.57" 
		Name="MainWindowView"
		Title="{Binding Title, Mode=OneWay}"
		WindowStartupLocation="CenterScreen" 
        FrameworkElement.SizeChanged="MainWindowView_SizeChanged">
	<Window.Resources>
		<cv:ParametersConverter x:Key="parametersConverter"/>
	</Window.Resources>
    <Window.DataContext >
        <vm:MainWindowViewModel />
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding NewElementCommand}" CommandParameter="{Binding ElementName=MainWindowView}" />
		<KeyBinding Key="N" Modifiers="Ctrl+Shift" Command="{Binding NewProjectCommand}" CommandParameter="{Binding ElementName=MainWindowView}" />
		<KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding OpenProjectCommand}" />
        <KeyBinding Key="F5" Command="{Binding OpenBuildProjectCommand}" CommandParameter="{Binding ElementName=MainWindowView}"/>
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyElementCommand}" />
        <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteElementCommand}" />
        <KeyBinding Key="D" Modifiers="Ctrl" Command="{Binding DuplicateElementCommand}" />
        <KeyBinding Key="Delete" Command="{Binding DeleteElementCommand}" />
        <KeyBinding Key="Z" Modifiers="Ctrl" Command="{Binding UndoCommand}" />
        <KeyBinding Key="F2" Command="{Binding EnableRenameElementCommand}" />
        <KeyBinding Key="Y" Modifiers="Ctrl" Command="{Binding RedoCommand}" />
        <KeyBinding Key="I" Modifiers="Ctrl" Command="{Binding OpenImportImageDialogCommand}" CommandParameter="{Binding ElementName=MainWindowView}" />
    </Window.InputBindings>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadConfigsCommand}"/>
            <i:InvokeCommandAction Command="{Binding LoadMappersCommand}"/>
        </i:EventTrigger>
		<i:EventTrigger EventName="Activated">
			<i:InvokeCommandAction Command="{Binding WindowsGetFocusCommand}"/>
		</i:EventTrigger>
    </i:Interaction.Triggers>
	<DockPanel>
		<Menu DockPanel.Dock="Top">
			<MenuItem Header="_File">
                <MenuItem Header="_New">
                    <MenuItem Header="New _Project" Command="{Binding NewProjectCommand}" CommandParameter="{Binding ElementName=MainWindowView}" InputGestureText="Ctrl+Shift+N">
                        <MenuItem.Icon>
                            <Image Width="16" Height="16" Source="/resources/new_project.png">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <fx:GrayscaleEffect />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="New _Element" Command="{Binding NewElementCommand}" CommandParameter="{Binding ElementName=MainWindowView}" InputGestureText="Ctrl+N">
                        <MenuItem.Icon>
                            <Image Width="16" Height="16" Source="/resources/new_element.png">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <fx:GrayscaleEffect />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Open Project" Command="{Binding OpenProjectCommand}" InputGestureText="Ctrl+O">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/resources/open_project.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <fx:GrayscaleEffect />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Close _Project" Command="{Binding CloseProjectCommand}" CommandParameter="{Binding ProjectName}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/resources/close_project.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <fx:GrayscaleEffect />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="_Import">
                    <MenuItem Header="_Image..." InputGestureText="Ctrl+I" Command="{Binding OpenImportImageDialogCommand}" CommandParameter="{Binding ElementName=MainWindowView}" />
                </MenuItem>
                <Separator />
				<MenuItem Header="_Recent Projects" ItemsSource="{Binding RecentProjects}">
					<MenuItem.ItemContainerStyle>
						<Style TargetType="{x:Type MenuItem}">
							<Setter Property="Header" Value="{Binding DisplayName}"/>
							<Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.OpenProjectCommand}" />
							<Setter Property="CommandParameter" Value="{Binding Path}" />
						</Style>
					</MenuItem.ItemContainerStyle>
				</MenuItem>
				<Separator />
				<MenuItem Header="_Exit" InputGestureText="Alt+F4" Command="{Binding ExitCommand}"/>
			</MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Undo" InputGestureText="Ctrl+Z" Command="{Binding UndoCommand}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/resources/undo.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <fx:GrayscaleEffect />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Redo" InputGestureText="Ctrl+Y" Command="{Binding RedoCommand}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/resources/redo.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <fx:GrayscaleEffect />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Copy" InputGestureText="Ctrl+C" Command="{Binding CopyElementCommand}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/resources/copy.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <fx:GrayscaleEffect />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Paste" InputGestureText="Ctrl+V" Command="{Binding PasteElementCommand}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/resources/paste.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <fx:GrayscaleEffect />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Duplicat_e" InputGestureText="Ctrl+D" Command="{Binding DuplicateElementCommand}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/resources/duplicate.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <fx:GrayscaleEffect />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Delete" InputGestureText="Delete" Command="{Binding DeleteElementCommand}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/resources/delete.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <fx:GrayscaleEffect />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
			<MenuItem Header="_Project">
                <MenuItem Header="Project _Properties..." Command="{Binding OpenProjectPropertiesCommand}">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource parametersConverter}">
                            <Binding ElementName="MainWindowView"/>
                            <Binding ElementName="MainWindowView" Path="DataContext.ProjectName"/>
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Build Project..." InputGestureText="F5" Command="{Binding OpenBuildProjectCommand}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/resources/build.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <fx:GrayscaleEffect />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource parametersConverter}">
                            <Binding ElementName="MainWindowView"/>
                            <Binding ElementName="MainWindowView" Path="DataContext.ProjectName"/>
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
            </MenuItem>
			<MenuItem Header="_Help">
                <MenuItem Header="_View Help" Command="{Binding ViewHelpCommand}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="/resources/help.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <fx:GrayscaleEffect />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
				<MenuItem Header="_About" Command="{Binding ShowAboutDialogCommand}" CommandParameter="{Binding ElementName=MainWindowView}" />
			</MenuItem>
		</Menu>
		<ToolBarTray DockPanel.Dock="Top">
			<ToolBar Name="File">
				<Button ToolTip="New Project" ToolBar.OverflowMode="AsNeeded" Command="{Binding NewProjectCommand}" CommandParameter="{Binding ElementName=MainWindowView}">
                    <Image Width="16" Height="16" Source="/resources/new_project.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
				</Button>
				<Button ToolTip="Open Project" ToolBar.OverflowMode="AsNeeded" Command="{Binding OpenProjectCommand}">
                    <Image Width="16" Height="16" Source="/resources/open_project.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
				</Button>
			</ToolBar>
            <ToolBar Name="Edit">
                <Button ToolTip="Undo" ToolBar.OverflowMode="AsNeeded" Command="{Binding UndoCommand}">
                    <Image Width="16" Height="16" Source="/resources/undo.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button ToolTip="Redo" ToolBar.OverflowMode="AsNeeded" Command="{Binding RedoCommand}">
                    <Image Width="16" Height="16" Source="/resources/redo.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
            </ToolBar>
			<ToolBar Name="Project">
                <Button ToolTip="Build Project" ToolBar.OverflowMode="AsNeeded" Command="{Binding OpenBuildProjectCommand}">
                    <Image Width="16" Height="16" Source="/resources/build.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource parametersConverter}">
                            <Binding ElementName="MainWindowView"/>
                            <Binding ElementName="MainWindowView" Path="DataContext.ProjectName"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </ToolBar>
            <ToolBar Name="tbrTileSet">
                <ToggleButton ToolTip="Show/Hide Grid" ToolBar.OverflowMode="AsNeeded" Name="tbShowHideGrid">
                    <i:Interaction.Behaviors>
                        <behaviors:EventToCommandBehavior Command="{Binding ShowGridCommand}" Event="Checked" PassArguments="True" />
                        <behaviors:EventToCommandBehavior Command="{Binding HideGridCommand}" Event="Unchecked" PassArguments="True" />
                    </i:Interaction.Behaviors>
                    <Image Width="16" Height="16" Source="/resources/showgrid.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ToggleButton>
            </ToolBar>
            <ToolBar Name="tbrBanks">
                <ToggleButton ToolTip="Show/Hide Group Marks" ToolBar.OverflowMode="AsNeeded" Name="tbShowHideGroupMarks">
                    <i:Interaction.Behaviors>
                        <behaviors:EventToCommandBehavior Command="{Binding ShowGroupMarksCommand}" Event="Checked" PassArguments="True" />
                        <behaviors:EventToCommandBehavior Command="{Binding HideGroupMarksCommand}" Event="Unchecked" PassArguments="True" />
                    </i:Interaction.Behaviors>
                    <Image Width="16" Height="16" Source="/resources/group_mark.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ToggleButton>
            </ToolBar>
            <ToolBar Name="tbrMap">
                <ToggleButton ToolTip="Show/Hide Grid" ToolBar.OverflowMode="AsNeeded" Name="tbMapShowHideGrid">
                    <i:Interaction.Behaviors>
                        <behaviors:EventToCommandBehavior Command="{Binding ShowGridCommand}" Event="Checked" PassArguments="True" />
                        <behaviors:EventToCommandBehavior Command="{Binding HideGridCommand}" Event="Unchecked" PassArguments="True" />
                    </i:Interaction.Behaviors>
                    <Image Width="16" Height="16" Source="/resources/showgrid.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ToggleButton>
                <ToggleButton ToolTip="Select" ToolBar.OverflowMode="AsNeeded" Name="tbMapSelect">
                    <i:Interaction.Behaviors>
                        <behaviors:EventToCommandBehavior Command="{Binding MapSelectToolCommand}" Event="Checked" PassArguments="True" />
                    </i:Interaction.Behaviors>
                    <Image Width="16" Height="16" Source="/resources/select.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ToggleButton>
                <ToggleButton ToolTip="Paint" ToolBar.OverflowMode="AsNeeded" Name="tbMapPaint">
                    <i:Interaction.Behaviors>
                        <behaviors:EventToCommandBehavior  Command="{Binding MapPaintToolCommand}" Event="Checked" PassArguments="True" />
                    </i:Interaction.Behaviors>
                    <Image Width="16" Height="16" Source="/resources/paint.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ToggleButton>
                <ToggleButton ToolTip="Erase" ToolBar.OverflowMode="AsNeeded" Name="tbMapErase">
                    <i:Interaction.Behaviors>
                        <behaviors:EventToCommandBehavior Command="{Binding MapEraseToolCommand}" Event="Checked" PassArguments="True"/>
                    </i:Interaction.Behaviors>
                    <Image Width="16" Height="16" Source="/resources/erase.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ToggleButton>
                <ToggleButton ToolTip="Show/Hide Sprites" ToolBar.OverflowMode="AsNeeded" Name="tbMapShowHideSprites">
                    <i:Interaction.Behaviors>
                        <behaviors:EventToCommandBehavior Command="{Binding ShowSpriteCommand}" Event="Checked" PassArguments="True" />
                        <behaviors:EventToCommandBehavior Command="{Binding HideSpriteCommand}" Event="Unchecked" PassArguments="True" />
                    </i:Interaction.Behaviors>
                    <Image Width="16" Height="16" Source="/resources/showsprites.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <fx:GrayscaleEffect />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ToggleButton>
            </ToolBar>
        </ToolBarTray>
		<StatusBar DockPanel.Dock="Bottom">
			<StatusBarItem>
				<TextBlock>Pre Alpha Version</TextBlock>
			</StatusBarItem>
		</StatusBar>
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="3"/>
				<ColumnDefinition MinWidth="100" Width="250"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="3"/>
			</Grid.ColumnDefinitions>
			<TreeView Name="tvProjectItems" Grid.Column="1" ItemsSource="{Binding ProjectItems}" PreviewMouseRightButtonDown="TreeView_PreviewMouseRightButtonDown" AllowDrop="True">
				<i:Interaction.Behaviors>
                    <behaviors:EventToCommandBehavior Command="{Binding PreviewMouseLeftButtonDownCommand}" Event="PreviewMouseLeftButtonDown"  PassArguments="True"/>
                    <behaviors:EventToCommandBehavior Command="{Binding PreviewMouseLeftButtonUpCommand}" Event="PreviewMouseLeftButtonUp" PassArguments="True" />
                    <behaviors:EventToCommandBehavior Command="{Binding PreviewMouseMoveCommand, Mode=OneWay}" Event="PreviewMouseMove" PassArguments="True" />
                    <behaviors:EventToCommandBehavior Command="{Binding DropCommand}" Event="PreviewDrop" PassArguments="True" />
                    <behaviors:EventToCommandBehavior Command="{Binding DragOverCommand}" Event="PreviewDragOver" PassArguments="True" />
                    <behaviors:EventToCommandBehavior Command="{Binding DragLeaveCommand}" Event="DragLeave" PassArguments="True" />
                    <behaviors:EventToCommandBehavior Command="{Binding DragEnterCommand}" Event="PreviewDragEnter" PassArguments="True" />
                    <behaviors:EventToCommandBehavior Command="{Binding QueryContinueDragCommand}" Event="PreviewQueryContinueDrag" PassArguments="True" />
                    <behaviors:EventToCommandBehavior Command="{Binding TreeviewSelectedItemChangedCommand}" Event="SelectedItemChanged" PassArguments="True"/>
                </i:Interaction.Behaviors>
				<TreeView.Resources>
                    <ContextMenu x:Key="FolderPopup">
                        <MenuItem Header="Create Folder" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.CreateFolderCommand}"/>
                        <MenuItem Header="Create New Element" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.CreateElementFromMenuCommand}"/>
						<Separator/>
                        <MenuItem Header="Copy" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.CopyElementCommand}">
                            <MenuItem.Icon>
                                <Image Width="16" Height="16" Source="/resources/copy.png">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Effect">
                                                        <Setter.Value>
                                                            <fx:GrayscaleEffect />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Opacity" Value="0.5"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Paste" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.PasteElementCommand}">
                            <MenuItem.Icon>
                                <Image Width="16" Height="16" Source="/resources/paste.png">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Effect">
                                                        <Setter.Value>
                                                            <fx:GrayscaleEffect />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Opacity" Value="0.5"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Delete" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.DeleteElementCommand}">
                            <MenuItem.Icon>
                                <Image Width="16" Height="16" Source="/resources/delete.png">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Effect">
                                                        <Setter.Value>
                                                            <fx:GrayscaleEffect />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Opacity" Value="0.5"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Rename" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.EnableRenameElementCommand}" />
					</ContextMenu>
					<ContextMenu x:Key="ItemPopup">
                        <MenuItem Header="Copy" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.CopyElementCommand}">
                            <MenuItem.Icon>
                                <Image Width="16" Height="16" Source="/resources/copy.png">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Effect">
                                                        <Setter.Value>
                                                            <fx:GrayscaleEffect />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Opacity" Value="0.5"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Delete" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.DeleteElementCommand}">
                            <MenuItem.Icon>
                                <Image Width="16" Height="16" Source="/resources/delete.png">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Effect">
                                                        <Setter.Value>
                                                            <fx:GrayscaleEffect />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Opacity" Value="0.5"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Rename" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.EnableRenameElementCommand}" />
					</ContextMenu>
					<HierarchicalDataTemplate DataType="{x:Type vm:ProjectItem}" ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal" Loaded="StackPanel_Loaded">
							<Image Name="itemImage" Source="/Resources/closed_folder.png" Margin="0,0,5,0" />
                            <TextBlock Name="txtDisplayName" Text="{Binding DisplayName}"/>
                            <TextBox Name="editableTextBox" Visibility="Collapsed" MinWidth="100" 
                                     Text="{Binding DisplayName, UpdateSourceTrigger=LostFocus}"
                                     IsVisibleChanged="EditableTextBox_IsVisibleChanged"
                                     PreviewTextInput="EditableTextBox_PreviewTextInput"
                                     LostFocus="EditableTextBox_LostFocus"
                                     KeyDown="EditableTextBox_KeyDown"/>
                        </StackPanel>
						<DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.Character}">
								<Setter Property="Source" TargetName="itemImage" Value="/Resources/character.png" />
							</DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.Bank}">
                                <Setter Property="Source" TargetName="itemImage" Value="/Resources/pattern_table.png" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.Map}">
								<Setter Property="Source" TargetName="itemImage" Value="/Resources/map.png" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.TileSet}">
								<Setter Property="Source" TargetName="itemImage" Value="/Resources/tileset.png" />
							</DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.Palette}">
                                <Setter Property="Source" TargetName="itemImage" Value="/Resources/palette.png" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.World}">
                                <Setter Property="Source" TargetName="itemImage" Value="/Resources/world.png" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.Entity}">
                                <Setter Property="Source" TargetName="itemImage" Value="/Resources/entity.png" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFolder}" Value="True">
                                <Setter Property="Source" TargetName="itemImage" Value="/Resources/closed_folder.png" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsRoot}" Value="False"/>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}}" Value="True"/>
                                    <Condition Binding="{Binding IsInEditMode}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" TargetName="editableTextBox" Value="Visible" />
                                    <Setter Property="Visibility" TargetName="txtDisplayName" Value="Collapsed" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsFolder}" Value="True"/>
                                    <Condition Binding="{Binding IsExpanded, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TreeViewItem}}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Source" TargetName="itemImage" Value="/Resources/open_folder.png" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
						</DataTemplate.Triggers>
					</HierarchicalDataTemplate>
				</TreeView.Resources>
				<TreeView.ItemContainerStyle>
					<Style TargetType="{x:Type TreeViewItem}">
						<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
						<Setter Property="FontWeight" Value="Normal" />
						<Style.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="FontWeight" Value="Bold" />
							</Trigger>
							<DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.Character}">
								<Setter Property="ContextMenu" Value="{StaticResource ItemPopup}"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.Bank}">
								<Setter Property="ContextMenu" Value="{StaticResource ItemPopup}"/>
							</DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.Map}">
								<Setter Property="ContextMenu" Value="{StaticResource ItemPopup}"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.TileSet}">
								<Setter Property="ContextMenu" Value="{StaticResource ItemPopup}"/>
							</DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.Palette}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemPopup}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.World}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemPopup}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static enum:ProjectItemType.Entity}">
                                <Setter Property="ContextMenu" Value="{StaticResource ItemPopup}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFolder}" Value="True">
                                <Setter Property="ContextMenu" Value="{StaticResource FolderPopup}"/>
                            </DataTrigger>
                        </Style.Triggers>
					</Style>
				</TreeView.ItemContainerStyle>
			</TreeView>
            <GridSplitter Grid.Column="1" Width="5" />
            <DockPanel Name="dpItemPanel" Grid.Column="2" LastChildFill="True">
                <DockPanel.Background>
                    <SolidColorBrush Color="#1E1E1E"/>
                </DockPanel.Background>
            </DockPanel>
        </Grid>
	</DockPanel>
</Window>
