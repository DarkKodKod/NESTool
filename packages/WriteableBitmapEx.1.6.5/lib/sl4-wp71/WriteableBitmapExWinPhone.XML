<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WriteableBitmapExWinPhone</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Media.Imaging.ReadWriteMode">
            <summary>
            Read Write Mode for the BitmapContext.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.ReadWriteMode.ReadOnly">
            <summary>
            On Dispose of a BitmapContext, do not Invalidate
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.ReadWriteMode.ReadWrite">
            <summary>
            On Dispose of a BitmapContext, invalidate the bitmap
            </summary>
        </member>
        <member name="T:System.Windows.Media.Imaging.BitmapContext">
            <summary>
            A disposable cross-platform wrapper around a WriteableBitmap, allowing a common API for Silverlight + WPF with locking + unlocking if necessary
            </summary>
            <remarks>Attempting to put as many preprocessor hacks in this file, to keep the rest of the codebase relatively clean</remarks>
        </member>
        <member name="M:System.Windows.Media.Imaging.BitmapContext.#ctor(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Creates an instance of a BitmapContext, with default mode = ReadWrite
            </summary>
            <param name="writeableBitmap"></param>
        </member>
        <member name="M:System.Windows.Media.Imaging.BitmapContext.#ctor(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Imaging.ReadWriteMode)">
            <summary>
            Creates an instance of a BitmapContext, with specified ReadWriteMode
            </summary>
            <param name="writeableBitmap"></param>
            <param name="mode"></param>
        </member>
        <member name="M:System.Windows.Media.Imaging.BitmapContext.BlockCopy(System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32)">
            <summary>
            Performs a Copy operation from source BitmapContext to destination BitmapContext
            </summary>
            <remarks>Equivalent to calling Buffer.BlockCopy in Silverlight, or native memcpy in WPF</remarks>
        </member>
        <member name="M:System.Windows.Media.Imaging.BitmapContext.BlockCopy(System.Array,System.Int32,System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32)">
            <summary>
            Performs a Copy operation from source Array to destination BitmapContext
            </summary>
            <remarks>Equivalent to calling Buffer.BlockCopy in Silverlight, or native memcpy in WPF</remarks>
        </member>
        <member name="M:System.Windows.Media.Imaging.BitmapContext.BlockCopy(System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Array,System.Int32,System.Int32)">
            <summary>
            Performs a Copy operation from source BitmapContext to destination Array
            </summary>
            <remarks>Equivalent to calling Buffer.BlockCopy in Silverlight, or native memcpy in WPF</remarks>
        </member>
        <member name="M:System.Windows.Media.Imaging.BitmapContext.Clear">
            <summary>
            Clears the BitmapContext, filling the underlying bitmap with zeros
            </summary>
        </member>
        <member name="M:System.Windows.Media.Imaging.BitmapContext.Dispose">
            <summary>
            Disposes this instance if the underlying platform needs that.
            </summary>
        </member>
        <member name="P:System.Windows.Media.Imaging.BitmapContext.WriteableBitmap">
            <summary>
            The Bitmap
            </summary>
        </member>
        <member name="P:System.Windows.Media.Imaging.BitmapContext.Width">
            <summary>
            Width of the bitmap
            </summary>
        </member>
        <member name="P:System.Windows.Media.Imaging.BitmapContext.Height">
            <summary>
            Height of the bitmap
            </summary>
        </member>
        <member name="P:System.Windows.Media.Imaging.BitmapContext.Pixels">
            <summary>
            Gets the Pixels array 
            </summary>        
        </member>
        <member name="P:System.Windows.Media.Imaging.BitmapContext.Length">
            <summary>
            Gets the length of the Pixels array 
            </summary>
        </member>
        <member name="T:System.Windows.Media.Imaging.BitmapFactory">
            <summary>
            Cross-platform factory for WriteableBitmaps
            </summary>
        </member>
        <member name="M:System.Windows.Media.Imaging.BitmapFactory.New(System.Int32,System.Int32)">
            <summary>
            Creates a new WriteableBitmap of the specified width and height
            </summary>
            <remarks>For WPF the default DPI is 96x96 and PixelFormat is Pbgra32</remarks>
            <param name="pixelWidth"></param>
            <param name="pixelHeight"></param>
            <returns></returns>
        </member>
        <member name="T:System.Windows.Media.Imaging.WriteableBitmapExtensions">
            <summary>
            Collection of draw extension methods for the Silverlight WriteableBitmap class.
            </summary>
            <summary>
            Collection of extension methods for the WriteableBitmap class.
            </summary>
            <summary>
            Collection of filter / convolution extension methods for the WriteableBitmap class.
            </summary>
            <summary>
            Collection of transformation extension methods for the WriteableBitmap class.
            </summary>
            <summary>
            Collection of extension methods for the WriteableBitmap class.
            </summary>
            <summary>
            Collection of blit (copy) extension methods for the WriteableBitmap class.
            </summary>
            <summary>
            Collection of interchange extension methods for the WriteableBitmap class.
            </summary>
            <summary>
            Collection of extension methods for the WriteableBitmap class.
            </summary>
            <summary>
            Collection of draw spline extension methods for the WriteableBitmap class.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.INSIDE">
            <summary>
            Bitfields used to partition the space into 9 regions
            </summary>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a filled rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Draws a filled rectangle with or without alpha blending (default = false).
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
            <param name="doAlphaBlend">True if alpha blending should be performed or false if not.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing filled ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf  
            With or without alpha blending (default = false).
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
            <param name="doAlphaBlend">True if alpha blending should be performed or false if not.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillPolygon(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color)">
            <summary>
            Draws a filled polygon. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polygon in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillPolygon(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Int32,System.Boolean)">
            <summary>
            Draws a filled polygon with or without alpha blending (default = false). 
            Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polygon in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
            <param name="doAlphaBlend">True if alpha blending should be performed or false if not.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillPolygonsEvenOdd(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[][],System.Windows.Media.Color)">
            <summary>
            Draws filled polygons using even-odd filling, therefore allowing for holes.
            </summary>
            <remarks>
            Polygons are implicitly closed if necessary.
            </remarks>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="polygons">Array of polygons. 
            The different polygons are identified by the first index, 
            while the points of each polygon are in x and y pairs indexed by the second index, 
            therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).
            </param>
            <param name="color">The color for the polygon.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillPolygonsEvenOdd(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[][],System.Int32)">
            <summary>
            Draws filled polygons using even-odd filling, therefore allowing for holes.
            </summary>
            <remarks>
            Polygons are implicitly closed if necessary.
            </remarks>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="polygons">Array of polygons. 
            The different polygons are identified by the first index, 
            while the points of each polygon are in x and y pairs indexed by the second index, 
            therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).
            </param>
            <param name="color">The color for the polygon.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a filled quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a filled quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a filled triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a filled triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.ComputeBezierPoints(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32)">
            <summary>
            Draws a filled, cubic Beziér spline defined by start, end and two control points.
            </summary>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="cx1">The x-coordinate of the 1st control point.</param>
            <param name="cy1">The y-coordinate of the 1st control point.</param>
            <param name="cx2">The x-coordinate of the 2nd control point.</param>
            <param name="cy2">The y-coordinate of the 2nd control point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color.</param>
            <param name="context">The context with the pixels.</param>
            <param name="w">The width of the bitmap.</param>
            <param name="h">The height of the bitmap.</param> 
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.ComputeBezierPoints(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a filled, cubic Beziér spline defined by start, end and two control points.
            </summary>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="cx1">The x-coordinate of the 1st control point.</param>
            <param name="cy1">The y-coordinate of the 1st control point.</param>
            <param name="cx2">The x-coordinate of the 2nd control point.</param>
            <param name="cy2">The y-coordinate of the 2nd control point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillBeziers(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color)">
            <summary>
            Draws a series of filled, cubic Beziér splines each defined by start, end and two control points. 
            The ending point of the previous curve is used as starting point for the next. 
            Therfore the inital curve needs four points and the subsequent 3 (2 control and 1 end point).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, cx1, cy1, cx2, cy2, x2, y2, cx3, cx4 ..., xn, yn).</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillBeziers(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Int32)">
            <summary>
            Draws a series of filled, cubic Beziér splines each defined by start, end and two control points. 
            The ending point of the previous curve is used as starting point for the next. 
            Therfore the inital curve needs four points and the subsequent 3 (2 control and 1 end point).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, cx1, cy1, cx2, cy2, x2, y2, cx3, cx4 ..., xn, yn).</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.ComputeSegmentPoints(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32)">
            <summary>
            Computes the discrete segment points of a Cardinal spline (cubic) defined by four control points.
            </summary>
            <param name="x1">The x-coordinate of the 1st control point.</param>
            <param name="y1">The y-coordinate of the 1st control point.</param>
            <param name="x2">The x-coordinate of the 2nd control point.</param>
            <param name="y2">The y-coordinate of the 2nd control point.</param>
            <param name="x3">The x-coordinate of the 3rd control point.</param>
            <param name="y3">The y-coordinate of the 3rd control point.</param>
            <param name="x4">The x-coordinate of the 4th control point.</param>
            <param name="y4">The y-coordinate of the 4th control point.</param>
            <param name="tension">The tension of the curve defines the shape. Usually between 0 and 1. 0 would be a straight line.</param>
            <param name="color">The color.</param>
            <param name="context">The context with the pixels.</param>
            <param name="w">The width of the bitmap.</param>
            <param name="h">The height of the bitmap.</param> 
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.ComputeSegmentPoints(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Computes the discrete segment points of a Cardinal spline (cubic) defined by four control points.
            </summary>
            <param name="x1">The x-coordinate of the 1st control point.</param>
            <param name="y1">The y-coordinate of the 1st control point.</param>
            <param name="x2">The x-coordinate of the 2nd control point.</param>
            <param name="y2">The y-coordinate of the 2nd control point.</param>
            <param name="x3">The x-coordinate of the 3rd control point.</param>
            <param name="y3">The y-coordinate of the 3rd control point.</param>
            <param name="x4">The x-coordinate of the 4th control point.</param>
            <param name="y4">The y-coordinate of the 4th control point.</param>
            <param name="tension">The tension of the curve defines the shape. Usually between 0 and 1. 0 would be a straight line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillCurve(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Single,System.Windows.Media.Color)">
            <summary>
            Draws a filled Cardinal spline (cubic) defined by a point collection. 
            The cardinal spline passes through each point in the collection.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, x3, y3, x4, y4, x1, x2 ..., xn, yn).</param>
            <param name="tension">The tension of the curve defines the shape. Usually between 0 and 1. 0 would be a straight line.</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillCurve(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Single,System.Int32)">
            <summary>
            Draws a filled Cardinal spline (cubic) defined by a point collection. 
            The cardinal spline passes through each point in the collection.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, x3, y3, x4, y4, x1, x2 ..., xn, yn).</param>
            <param name="tension">The tension of the curve defines the shape. Usually between 0 and 1. 0 would be a straight line.</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillCurveClosed(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Single,System.Windows.Media.Color)">
            <summary>
            Draws a filled, closed Cardinal spline (cubic) defined by a point collection. 
            The cardinal spline passes through each point in the collection.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, x3, y3, x4, y4, x1, x2 ..., xn, yn).</param>
            <param name="tension">The tension of the curve defines the shape. Usually between 0 and 1. 0 would be a straight line.</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FillCurveClosed(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Single,System.Int32)">
            <summary>
            Draws a filled, closed Cardinal spline (cubic) defined by a point collection. 
            The cardinal spline passes through each point in the collection.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, x3, y3, x4, y4, x1, x2 ..., xn, yn).</param>
            <param name="tension">The tension of the curve defines the shape. Usually between 0 and 1. 0 would be a straight line.</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.KernelGaussianBlur5x5">
            <summary>
             Gaussian blur kernel with the size 5x5
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.KernelGaussianBlur3x3">
            <summary>
             Gaussian blur kernel with the size 3x3
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.KernelSharpen3x3">
            <summary>
             Sharpen kernel with the size 3x3
            </summary>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Convolute(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[0:,0:])">
            <summary>
            Creates a new filtered WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="kernel">The kernel used for convolution.</param>
            <returns>A new WriteableBitmap that is a filtered version of the input.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Convolute(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[0:,0:],System.Int32,System.Int32)">
            <summary>
            Creates a new filtered WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="kernel">The kernel used for convolution.</param>
            <param name="kernelFactorSum">The factor used for the kernel summing.</param>
            <param name="kernelOffsetSum">The offset used for the kernel summing.</param>
            <returns>A new WriteableBitmap that is a filtered version of the input.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Invert(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Creates a new inverted WriteableBitmap and returns it.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <returns>The new inverted WriteableBitmap.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Gray(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Creates a new WriteableBitmap which is the grayscaled version of this one and returns it. The gray values are equal to the brightness values. 
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <returns>The new gray WriteableBitmap.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.AdjustContrast(System.Windows.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Creates a new WriteableBitmap which is contrast adjusted version of this one and returns it.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="level">Level of contrast as double. [-255.0, 255.0] </param>
            <returns>The new WriteableBitmap.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.AdjustBrightness(System.Windows.Media.Imaging.WriteableBitmap,System.Int32)">
            <summary>
            Creates a new WriteableBitmap which is brightness adjusted version of this one and returns it.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="nLevel">Level of contrast as double. [-255.0, 255.0] </param>
            <returns>The new WriteableBitmap.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.AdjustGamma(System.Windows.Media.Imaging.WriteableBitmap,System.Double)">
            <summary>
            Creates a new WriteableBitmap which is gamma adjusted version of this one and returns it.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="value">Value of gamma for adjustment. Original is 1.0.</param>
            <returns>The new WriteableBitmap.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineBresenham(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using the Bresenham algorithm.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineBresenham(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using the Bresenham algorithm.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineDDA(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using a DDA algorithm (Digital Differential Analyzer).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineDDA(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using a DDA algorithm (Digital Differential Analyzer).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLine(System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA. 
            Uses the pixels array and the width directly for best performance.
            </summary>
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLinePenned(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Draws a line using a pen / stamp for the line 
            </summary>
            <param name="bmp">The WriteableBitmap containing the pixels as int RGBA value.</param>
            <param name="w">The width of one scanline in the pixels array.</param>
            <param name="h">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="penBmp">The pen bitmap.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLinePenned(System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Imaging.BitmapContext)">
            <summary>
            Draws a line using a pen / stamp for the line 
            </summary>
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="w">The width of one scanline in the pixels array.</param>
            <param name="h">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="pen">The pen context.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.ComputeOutCode(System.Windows.Rect,System.Double,System.Double)">
            <summary>
            Compute the bit code for a point (x, y) using the clip rectangle
            bounded diagonally by (xmin, ymin), and (xmax, ymax)
            ASSUME THAT xmax , xmin , ymax and ymin are global constants.
            </summary>
            <param name="extents">The extents.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineWu(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an anti-aliased, alpha blended, colored line by connecting two points using Wu's antialiasing algorithm
            Uses the pixels array and the width directly for best performance.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x0.</param>
            <param name="y1">The y0.</param>
            <param name="x2">The x1.</param>
            <param name="y2">The y1.</param>
            <param name="sa">Alpha color component</param>
            <param name="sr">Premultiplied red color component</param>
            <param name="sg">Premultiplied green color component</param>
            <param name="sb">Premultiplied blue color component</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineWu(System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an anti-aliased, alpha-blended, colored line by connecting two points using Wu's antialiasing algorithm
            Uses the pixels array and the width directly for best performance.
            </summary>
            <param name="context">An array containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x0.</param>
            <param name="y1">The y0.</param>
            <param name="x2">The x1.</param>
            <param name="y2">The y1.</param>
            <param name="sa">Alpha color component</param>
            <param name="sr">Premultiplied red color component</param>
            <param name="sg">Premultiplied green color component</param>
            <param name="sb">Premultiplied blue color component</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> 
            Draws an anti-aliased line with a desired stroke thickness
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            <param name="strokeThickness">The stroke thickness of the line.</param>
            </summary>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> 
            Draws an anti-aliased line with a desired stroke thickness
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            <param name="strokeThickness">The stroke thickness of the line.</param>
            </summary>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Int32)">
            <summary> 
            Draws an anti-aliased line with a desired stroke thickness
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            <param name="strokeThickness">The stroke thickness of the line.</param>
            </summary>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color,System.Int32)">
            <summary> 
            Draws an anti-aliased line with a desired stroke thickness
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            <param name="strokeThickness">The stroke thickness of the line.</param>
            </summary>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawLineAa(System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> 
            Draws an anti-aliased line, using an optimized version of Gupta-Sproull algorithm 
            From http://nokola.com/blog/post/2010/10/14/Anti-aliased-Lines-And-Optimizing-Code-for-Windows-Phone-7e28093First-Look.aspx
            <param name="context">The context containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
            </summary> 
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.AlphaBlendNormalOnPremultiplied(System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32,System.UInt32,System.UInt32)">
            <summary> 
            Blends a specific source color on top of a destination premultiplied color 
            </summary> 
            <param name="context">Array containing destination color</param> 
            <param name="index">Index of destination pixel</param> 
            <param name="sa">Source alpha (0..255)</param> 
            <param name="srb">Source non-premultiplied red and blue component in the format 0x00rr00bb</param> 
            <param name="sg">Source green component (0..255)</param> 
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.CohenSutherlandLineClip(System.Windows.Rect,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Cohen–Sutherland clipping algorithm clips a line from
            P0 = (x0, y0) to P1 = (x1, y1) against a rectangle with 
            diagonal from (xmin, ymin) to (xmax, ymax).
            </summary>
            <remarks>See http://en.wikipedia.org/wiki/Cohen%E2%80%93Sutherland_algorithm for details</remarks>
            <returns>a list of two points in the resulting clipped line, or zero</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.AlphaBlend(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Alpha blends 2 premultiplied colors with each other
            </summary>
            <param name="sa">Source alpha color component</param>
            <param name="sr">Premultiplied source red color component</param>
            <param name="sg">Premultiplied source green color component</param>
            <param name="sb">Premultiplied source blue color component</param>
            <param name="destPixel">Premultiplied destination color</param>
            <returns>Premultiplied blended color value</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Crop(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new cropped WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate of the rectangle that defines the crop region.</param>
            <param name="y">The y coordinate of the rectangle that defines the crop region.</param>
            <param name="width">The width of the rectangle that defines the crop region.</param>
            <param name="height">The height of the rectangle that defines the crop region.</param>
            <returns>A new WriteableBitmap that is a cropped version of the input.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Crop(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Rect)">
            <summary>
            Creates a new cropped WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="region">The rectangle that defines the crop region.</param>
            <returns>A new WriteableBitmap that is a cropped version of the input.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Resize(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Windows.Media.Imaging.WriteableBitmapExtensions.Interpolation)">
            <summary>
            Creates a new resized WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="width">The new desired width.</param>
            <param name="height">The new desired height.</param>
            <param name="interpolation">The interpolation method that should be used.</param>
            <returns>A new WriteableBitmap that is a resized version of the input.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Resize(System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Imaging.WriteableBitmapExtensions.Interpolation)">
            <summary>
            Creates a new resized bitmap.
            </summary>
            <param name="srcContext">The source context.</param>
            <param name="widthSource">The width of the source pixels.</param>
            <param name="heightSource">The height of the source pixels.</param>
            <param name="width">The new desired width.</param>
            <param name="height">The new desired height.</param>
            <param name="interpolation">The interpolation method that should be used.</param>
            <returns>A new bitmap that is a resized version of the input.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Resize(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Imaging.WriteableBitmapExtensions.Interpolation)">
            <summary>
            Creates a new resized bitmap.
            </summary>
            <param name="pixels">The source pixels.</param>
            <param name="widthSource">The width of the source pixels.</param>
            <param name="heightSource">The height of the source pixels.</param>
            <param name="width">The new desired width.</param>
            <param name="height">The new desired height.</param>
            <param name="interpolation">The interpolation method that should be used.</param>
            <returns>A new bitmap that is a resized version of the input.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Rotate(System.Windows.Media.Imaging.WriteableBitmap,System.Int32)">
            <summary>
            Rotates the bitmap in 90° steps clockwise and returns a new rotated WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="angle">The angle in degress the bitmap should be rotated in 90° steps clockwise.</param>
            <returns>A new WriteableBitmap that is a rotated version of the input.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.RotateFree(System.Windows.Media.Imaging.WriteableBitmap,System.Double,System.Boolean)">
            <summary>
            Rotates the bitmap in any degree returns a new rotated WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="angle">Arbitrary angle in 360 Degrees (positive = clockwise).</param>
            <param name="crop">if true: keep the size, false: adjust canvas to new size</param>
            <returns>A new WriteableBitmap that is a rotated version of the input.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Flip(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Imaging.WriteableBitmapExtensions.FlipMode)">
            <summary>
            Flips (reflects the image) eiter vertical or horizontal.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="flipMode">The flip mode.</param>
            <returns>A new WriteableBitmap that is a flipped version of the input.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Clear(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color)">
            <summary>
            Fills the whole WriteableBitmap with a color.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="color">The color used for filling.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Clear(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Fills the whole WriteableBitmap with an empty color (0).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Clone(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Clones the specified WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <returns>A copy of the WriteableBitmap.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.ForEach(System.Windows.Media.Imaging.WriteableBitmap,System.Func{System.Int32,System.Int32,System.Windows.Media.Color})">
            <summary>
            Applies the given function to all the pixels of the bitmap in 
            order to set their color.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="func">The function to apply. With parameters x, y and a color as a result</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.ForEach(System.Windows.Media.Imaging.WriteableBitmap,System.Func{System.Int32,System.Int32,System.Windows.Media.Color,System.Windows.Media.Color})">
            <summary>
            Applies the given function to all the pixels of the bitmap in 
            order to set their color.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="func">The function to apply. With parameters x, y, source color and a color as a result</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.GetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Gets the color of the pixel at the x, y coordinate as integer.  
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate of the pixel.</param>
            <param name="y">The y coordinate of the pixel.</param>
            <returns>The color of the pixel at x, y.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.GetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Gets the color of the pixel at the x, y coordinate as a Color struct.  
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate of the pixel.</param>
            <param name="y">The y coordinate of the pixel.</param>
            <returns>The color of the pixel at x, y as a Color struct.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.GetBrightness(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Gets the brightness / luminance of the pixel at the x, y coordinate as byte.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate of the pixel.</param>
            <param name="y">The y coordinate of the pixel.</param>
            <returns>The brightness of the pixel at x, y.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.SetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the color of the pixel using a precalculated index (faster). 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="index">The coordinate index.</param>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.SetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the color of the pixel. 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate (row).</param>
            <param name="y">The y coordinate (column).</param>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.SetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the color of the pixel including the alpha value and using a precalculated index (faster). 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="index">The coordinate index.</param>
            <param name="a">The alpha value of the color.</param>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.SetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the color of the pixel including the alpha value. 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate (row).</param>
            <param name="y">The y coordinate (column).</param>
            <param name="a">The alpha value of the color.</param>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.SetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Windows.Media.Color)">
            <summary>
            Sets the color of the pixel using a precalculated index (faster). 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="index">The coordinate index.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.SetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Sets the color of the pixel. 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate (row).</param>
            <param name="y">The y coordinate (column).</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.SetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Byte,System.Windows.Media.Color)">
            <summary>
            Sets the color of the pixel using an extra alpha value and a precalculated index (faster). 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="index">The coordinate index.</param>
            <param name="a">The alpha value of the color.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.SetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Byte,System.Windows.Media.Color)">
            <summary>
            Sets the color of the pixel using an extra alpha value. 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate (row).</param>
            <param name="y">The y coordinate (column).</param>
            <param name="a">The alpha value of the color.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.SetPixeli(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Sets the color of the pixel using a precalculated index (faster).  
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="index">The coordinate index.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.SetPixel(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the color of the pixel. 
            For best performance this method should not be used in iterative real-time scenarios. Implement the code directly inside a loop.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x">The x coordinate (row).</param>
            <param name="y">The y coordinate (column).</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Blit(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Rect,System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Rect,System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode)">
            <summary>
            Copies (blits) the pixels from the WriteableBitmap source to the destination WriteableBitmap (this).
            </summary>
            <param name="bmp">The destination WriteableBitmap.</param>
            <param name="destRect">The rectangle that defines the destination region.</param>
            <param name="source">The source WriteableBitmap.</param>
            <param name="sourceRect">The rectangle that will be copied from the source to the destination.</param>
            <param name="blendMode">The blending mode <see cref="T:System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode"/>.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Blit(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Rect,System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Rect)">
            <summary>
            Copies (blits) the pixels from the WriteableBitmap source to the destination WriteableBitmap (this).
            </summary>
            <param name="bmp">The destination WriteableBitmap.</param>
            <param name="destRect">The rectangle that defines the destination region.</param>
            <param name="source">The source WriteableBitmap.</param>
            <param name="sourceRect">The rectangle that will be copied from the source to the destination.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Blit(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Point,System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Rect,System.Windows.Media.Color,System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode)">
            <summary>
            Copies (blits) the pixels from the WriteableBitmap source to the destination WriteableBitmap (this).
            </summary>
            <param name="bmp">The destination WriteableBitmap.</param>
            <param name="destPosition">The destination position in the destination bitmap.</param>
            <param name="source">The source WriteableBitmap.</param>
            <param name="sourceRect">The rectangle that will be copied from the source to the destination.</param>
            <param name="color">If not Colors.White, will tint the source image. A partially transparent color and the image will be drawn partially transparent.</param>
            <param name="blendMode">The blending mode <see cref="T:System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode"/>.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Blit(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Rect,System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Rect,System.Windows.Media.Color,System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode)">
            <summary>
            Copies (blits) the pixels from the WriteableBitmap source to the destination WriteableBitmap (this).
            </summary>
            <param name="bmp">The destination WriteableBitmap.</param>
            <param name="destRect">The rectangle that defines the destination region.</param>
            <param name="source">The source WriteableBitmap.</param>
            <param name="sourceRect">The rectangle that will be copied from the source to the destination.</param>
            <param name="color">If not Colors.White, will tint the source image. A partially transparent color and the image will be drawn partially transparent. If the BlendMode is ColorKeying, this color will be used as color key to mask all pixels with this value out.</param>
            <param name="blendMode">The blending mode <see cref="T:System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode"/>.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.ToByteArray(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32)">
            <summary>
            Copies the Pixels from the WriteableBitmap into a ARGB byte array starting at a specific Pixels index.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="offset">The starting Pixels index.</param>
            <param name="count">The number of Pixels to copy, -1 for all</param>
            <returns>The color buffer as byte ARGB values.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.ToByteArray(System.Windows.Media.Imaging.WriteableBitmap,System.Int32)">
            <summary>
            Copies the Pixels from the WriteableBitmap into a ARGB byte array.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="count">The number of pixels to copy.</param>
            <returns>The color buffer as byte ARGB values.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.ToByteArray(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Copies all the Pixels from the WriteableBitmap into a ARGB byte array.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <returns>The color buffer as byte ARGB values.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FromByteArray(System.Windows.Media.Imaging.WriteableBitmap,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies color information from an ARGB byte array into this WriteableBitmap starting at a specific buffer index.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="offset">The starting index in the buffer.</param>
            <param name="count">The number of bytes to copy from the buffer.</param>
            <param name="buffer">The color buffer as byte ARGB values.</param>
            <returns>The WriteableBitmap that was passed as parameter.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FromByteArray(System.Windows.Media.Imaging.WriteableBitmap,System.Byte[],System.Int32)">
            <summary>
            Copies color information from an ARGB byte array into this WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="count">The number of bytes to copy from the buffer.</param>
            <param name="buffer">The color buffer as byte ARGB values.</param>
            <returns>The WriteableBitmap that was passed as parameter.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FromByteArray(System.Windows.Media.Imaging.WriteableBitmap,System.Byte[])">
            <summary>
            Copies all the color information from an ARGB byte array into this WriteableBitmap.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="buffer">The color buffer as byte ARGB values.</param>
            <returns>The WriteableBitmap that was passed as parameter.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.WriteTga(System.Windows.Media.Imaging.WriteableBitmap,System.IO.Stream)">
            <summary>
            Writes the WriteableBitmap as a TGA image to a stream. 
            Used with permission from Nokola: http://nokola.com/blog/post/2010/01/21/Quick-and-Dirty-Output-of-WriteableBitmap-as-TGA-Image.aspx
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="destination">The destination stream.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FromResource(System.Windows.Media.Imaging.WriteableBitmap,System.String)">
            <summary>
            Loads an image from the applications resource file and returns a new WriteableBitmap. The passed WriteableBitmap is not used.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="relativePath">Only the relative path to the resource file. The assembly name is retrieved automatically.</param>
            <returns>A new WriteableBitmap containing the pixel data.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FromContent(System.Windows.Media.Imaging.WriteableBitmap,System.String)">
            <summary>
            Loads an image from the applications content and returns a new WriteableBitmap. The passed WriteableBitmap is not used.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="relativePath">Only the relative path to the content file.</param>
            <returns>A new WriteableBitmap containing the pixel data.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.FromStream(System.Windows.Media.Imaging.WriteableBitmap,System.IO.Stream)">
            <summary>
            Loads the data from an image stream and returns a new WriteableBitmap. The passed WriteableBitmap is not used.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="stream">The stream with the image data.</param>
            <returns>A new WriteableBitmap containing the pixel data.</returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawPolyline(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color)">
            <summary>
            Draws a polyline. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawPolyline(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Int32)">
            <summary>
            Draws a polyline anti-aliased. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawPolylineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color)">
            <summary>
            Draws a polyline. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawPolylineAa(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Int32)">
            <summary>
            Draws a polyline anti-aliased. Add the first point also at the end of the array if the line should be closed.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points of the polyline in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, ..., xn, yn).</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawTriangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a triangle.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawQuad(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a quad.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the 1st point.</param>
            <param name="y1">The y-coordinate of the 1st point.</param>
            <param name="x2">The x-coordinate of the 2nd point.</param>
            <param name="y2">The y-coordinate of the 2nd point.</param>
            <param name="x3">The x-coordinate of the 3rd point.</param>
            <param name="y3">The y-coordinate of the 3rd point.</param>
            <param name="x4">The x-coordinate of the 4th point.</param>
            <param name="y4">The y-coordinate of the 4th point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawRectangle(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawEllipse(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawEllipseCentered(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A Fast Bresenham Type Algorithm For Drawing Ellipses http://homepage.smc.edu/kennedy_john/belipse.pdf 
            Uses a different parameter representation than DrawEllipse().
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="xc">The x-coordinate of the ellipses center.</param>
            <param name="yc">The y-coordinate of the ellipses center.</param>
            <param name="xr">The radius of the ellipse in x-direction.</param>
            <param name="yr">The radius of the ellipse in y-direction.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawBezier(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Draws a cubic Beziér spline defined by start, end and two control points.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="cx1">The x-coordinate of the 1st control point.</param>
            <param name="cy1">The y-coordinate of the 1st control point.</param>
            <param name="cx2">The x-coordinate of the 2nd control point.</param>
            <param name="cy2">The y-coordinate of the 2nd control point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawBezier(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a cubic Beziér spline defined by start, end and two control points.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="cx1">The x-coordinate of the 1st control point.</param>
            <param name="cy1">The y-coordinate of the 1st control point.</param>
            <param name="cx2">The x-coordinate of the 2nd control point.</param>
            <param name="cy2">The y-coordinate of the 2nd control point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawBeziers(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Windows.Media.Color)">
            <summary>
            Draws a series of cubic Beziér splines each defined by start, end and two control points. 
            The ending point of the previous curve is used as starting point for the next. 
            Therfore the inital curve needs four points and the subsequent 3 (2 control and 1 end point).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, cx1, cy1, cx2, cy2, x2, y2, cx3, cx4 ..., xn, yn).</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawBeziers(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Int32)">
            <summary>
            Draws a series of cubic Beziér splines each defined by start, end and two control points. 
            The ending point of the previous curve is used as starting point for the next. 
            Therfore the inital curve needs four points and the subsequent 3 (2 control and 1 end point).
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, cx1, cy1, cx2, cy2, x2, y2, cx3, cx4 ..., xn, yn).</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawCurveSegment(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Windows.Media.Imaging.BitmapContext,System.Int32,System.Int32)">
            <summary>
            Draws a segment of a Cardinal spline (cubic) defined by four control points.
            </summary>
            <param name="x1">The x-coordinate of the 1st control point.</param>
            <param name="y1">The y-coordinate of the 1st control point.</param>
            <param name="x2">The x-coordinate of the 2nd control point.</param>
            <param name="y2">The y-coordinate of the 2nd control point.</param>
            <param name="x3">The x-coordinate of the 3rd control point.</param>
            <param name="y3">The y-coordinate of the 3rd control point.</param>
            <param name="x4">The x-coordinate of the 4th control point.</param>
            <param name="y4">The y-coordinate of the 4th control point.</param>
            <param name="tension">The tension of the curve defines the shape. Usually between 0 and 1. 0 would be a straight line.</param>
            <param name="color">The color.</param>
            <param name="context">The pixel context.</param>
            <param name="w">The width of the bitmap.</param>
            <param name="h">The height of the bitmap.</param> 
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawCurve(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Single,System.Windows.Media.Color)">
            <summary>
            Draws a Cardinal spline (cubic) defined by a point collection. 
            The cardinal spline passes through each point in the collection.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, x3, y3, x4, y4, x1, x2 ..., xn, yn).</param>
            <param name="tension">The tension of the curve defines the shape. Usually between 0 and 1. 0 would be a straight line.</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawCurve(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Single,System.Int32)">
            <summary>
            Draws a Cardinal spline (cubic) defined by a point collection. 
            The cardinal spline passes through each point in the collection.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, x3, y3, x4, y4, x1, x2 ..., xn, yn).</param>
            <param name="tension">The tension of the curve defines the shape. Usually between 0 and 1. 0 would be a straight line.</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawCurveClosed(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Single,System.Windows.Media.Color)">
            <summary>
            Draws a closed Cardinal spline (cubic) defined by a point collection. 
            The cardinal spline passes through each point in the collection.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, x3, y3, x4, y4, x1, x2 ..., xn, yn).</param>
            <param name="tension">The tension of the curve defines the shape. Usually between 0 and 1. 0 would be a straight line.</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.DrawCurveClosed(System.Windows.Media.Imaging.WriteableBitmap,System.Int32[],System.Single,System.Int32)">
            <summary>
            Draws a closed Cardinal spline (cubic) defined by a point collection. 
            The cardinal spline passes through each point in the collection.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="points">The points for the curve in x and y pairs, therefore the array is interpreted as (x1, y1, x2, y2, x3, y3, x4, y4, x1, x2 ..., xn, yn).</param>
            <param name="tension">The tension of the curve defines the shape. Usually between 0 and 1. 0 would be a straight line.</param>
            <param name="color">The color for the spline.</param>
        </member>
        <member name="T:System.Windows.Media.Imaging.WriteableBitmapExtensions.Edge">
            <summary>
            Helper class for storing the data of an edge.
            </summary>
            <remarks>
            The following is always true: 
            <code>edge.StartY &lt; edge.EndY</code>
            </remarks>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.Edge.StartX">
            <summary>
            X coordinate of starting point of edge.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.Edge.StartY">
            <summary>
            Y coordinate of starting point of edge.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.Edge.EndX">
            <summary>
            X coordinate of ending point of edge.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.Edge.EndY">
            <summary>
            Y coordinate of ending point of edge.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.Edge.Sloap">
            <summary>
            The sloap of the edge.
            </summary>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Edge.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.WriteableBitmapExtensions.Edge"/> class.
            </summary>
            <remarks>
            The constructor may swap start and end point to fulfill the guarantees of this class.
            </remarks>
            <param name="startX">The X coordinate of the start point of the edge.</param>
            <param name="startY">The Y coordinate of the start point of the edge.</param>
            <param name="endX">The X coordinate of the end point of the edge.</param>
            <param name="endY">The Y coordinate of the end point of the edge.</param>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapExtensions.Edge.CompareTo(System.Windows.Media.Imaging.WriteableBitmapExtensions.Edge)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:System.Windows.Media.Imaging.WriteableBitmapExtensions.Interpolation">
            <summary>
            The interpolation method.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.Interpolation.NearestNeighbor">
            <summary>
            The nearest neighbor algorithm simply selects the color of the nearest pixel.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.Interpolation.Bilinear">
            <summary>
            Linear interpolation in 2D using the average of 3 neighboring pixels.
            </summary>
        </member>
        <member name="T:System.Windows.Media.Imaging.WriteableBitmapExtensions.FlipMode">
            <summary>
            The mode for flipping.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.FlipMode.Vertical">
            <summary>
            Flips the image vertical (around the center of the y-axis).
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.FlipMode.Horizontal">
            <summary>
            Flips the image horizontal (around the center of the x-axis).
            </summary>
        </member>
        <member name="T:System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode">
            <summary>
            The blending mode.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode.Alpha">
            <summary>
            Alpha blendiing uses the alpha channel to combine the source and destination. 
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode.Additive">
            <summary>
            Additive blending adds the colors of the source and the destination.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode.Subtractive">
            <summary>
            Subtractive blending subtracts the source color from the destination.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode.Mask">
            <summary>
            Uses the source color as a mask.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode.Multiply">
            <summary>
            Multiplies the source color with the destination color.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode.ColorKeying">
            <summary>
            Ignores the specified Color
            </summary>
        </member>
        <member name="F:System.Windows.Media.Imaging.WriteableBitmapExtensions.BlendMode.None">
            <summary>
            No blending just copies the pixels from the source.
            </summary>
        </member>
        <member name="T:System.Windows.Media.Imaging.WriteableBitmapContextExtensions">
            <summary>
            Provides the WriteableBitmap context pixel data
            </summary>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapContextExtensions.GetBitmapContext(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Gets a BitmapContext within which to perform nested IO operations on the bitmap
            </summary>
            <remarks>For WPF the BitmapContext will lock the bitmap. Call Dispose on the context to unlock</remarks>
            <param name="bmp"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Media.Imaging.WriteableBitmapContextExtensions.GetBitmapContext(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Imaging.ReadWriteMode)">
            <summary>
            Gets a BitmapContext within which to perform nested IO operations on the bitmap
            </summary>
            <remarks>For WPF the BitmapContext will lock the bitmap. Call Dispose on the context to unlock</remarks>
            <param name="bmp">The bitmap.</param>
            <param name="mode">The ReadWriteMode. If set to ReadOnly, the bitmap will not be invalidated on dispose of the context, else it will</param>
            <returns></returns>
        </member>
    </members>
</doc>
